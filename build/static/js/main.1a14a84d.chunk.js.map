{"version":3,"sources":["cv/Resume.js","cv/ContactInformation.js","cv/WorkExp.js","cv/Education.js","components/ResumeHeader.js","components/ResumeWorkExperience.js","components/ResumeWorkOverview.js","components/ContactField.js","components/ResumeContactInfo.js","components/ResumeSkills.js","components/ResumeEducationExperience.js","components/ResumeEducationOverview.js","components/ResumeBody.js","components/ResumeOutput.js","components/AddToResumeSpeedDial.js","components/AppHeader.js","localStorageHelper.js","components/DeleteConfirmation.js","components/EditContactForm.js","components/EditWorkExpForm.js","components/EditSkillsForm.js","components/CustomizeForm.js","App.js","index.js"],"names":["Resume","this","_contactInformation","undefined","_educationHistory","_workHistory","_skills","newSkill","skill","id","uniqid","ContactInformation","_firstName","_lastName","_title","_phoneNumber","_email","_website","WorkExp","_jobTitle","_orgName","_location","_description","_startDate","_endDate","_id","Education","_educationTitle","ResumeHeader","props","contactInformation","Box","sx","width","bgcolor","mt","minHeight","Typography","color","pl","pt","variant","component","pb","ResumeWorkExperience","workExperience","editWorkInfo","deleteWorkInfo","m","display","alignItems","mb","lineHeight","IconButton","onClick","height","ml","mx","justifyContent","ResumeWorkOverview","workHistory","workExperiences","map","value","length","ContactField","data","DisplayIcon","icon","flexDirection","flexWrap","pr","fontSize","ResumeContactInfo","contactFields","push","PhoneAndroidSharpIcon","EmailSharpIcon","ComputerSharpIcon","boxSizing","overflow","p","ResumeSkills","mySkills","skills","Chip","label","size","gap","rowGap","ResumeEducationExperience","educationExperience","deleteEducationInfo","editEducationInfo","ResumeEducationOverview","educationHistory","educationExperiences","ResumeBody","resume","minWidth","Stack","ResumeOutput","Card","elevation","className","style","AddToResumeSpeedDial","useState","open","setOpen","setContactOpen","setWorkOpen","setEducationOpen","setSkillsOpen","setCustomizeOpen","transform","flexGrow","SpeedDial","ariaLabel","SpeedDialIcon","onClose","e","reason","direction","position","top","left","SpeedDialAction","tooltipTitle","tooltipOpen","tooltipPlacement","AppHeader","modeButton","iconColor","saveResumeToPdf","toggleDarkMode","mode","Fragment","AppBar","Toolbar","LocalStorageHelper","Storage","_storageAvailable","key","objectToSave","window","localStorage","setItem","JSON","stringify","clear","parse","getItem","removeItem","DeleteConfirmation","handleClose","deleteWork","deleteEducation","deleteMode","Dialog","DialogTitle","DialogContent","DialogActions","Button","type","EditContactForm","handleChange","name","event","setState","state","target","validatePhoneNumber","match","phoneError","phoneHelperText","validateEmail","validate","emailError","emailHelperText","saveFormInfo","bind","title","email","phone","website","phoneColor","emailColor","preventDefault","updateContactInfo","TextField","autoFocus","margin","fullWidth","defaultValue","onChange","error","helperText","React","EditWorkExpForm","handleStartDateChange","newValue","startDate","handleEndDateChange","endDate","resetState","currentDate","Date","now","company","location","description","modes","work","add","edit","education","defaultValues","updateWorkInfo","updateEducationInfo","workMode","prevProps","prevState","snapshot","idToPopulate","str","year","month","Number","workEntry","filter","element","sDate","getDateFromString","eDate","educationEntry","my","mr","spacing","DesktopDatePicker","views","renderInput","params","EditSkillsForm","updateSkills","deleteSkill","skillChips","onDelete","onSubmit","CustomizeForm","customColors","updateColor","colorButtons","backgroundColor","border","App","openEditContactInformationDialog","info","console","log","setAddEditMode","setWorkMode","workOpen","deleteConfirmationOpen","deleteWorkKey","deleteEduKey","Object","assign","storageHelper","saveItem","resumeColor","storedResume","retrieveItem","myResume","contactInfo","trim","i","addSkill","edu","resColor","blue","contactOpen","addEditMode","skillsOpen","customizeOpen","red","pink","purple","deepPurple","indigo","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","closeDeleteConfirmation","confirmDeleteWorkInfo","confirmDeleteEducationInfo","handleContactClose","handleWorkClose","handleSkillsClose","handleCustomizeClose","format","concat","html2canvas","document","querySelector","scale","then","canvas","imgData","toDataURL","pdf","jsPDF","unit","addImage","save","newMode","myTheme","createTheme","palette","resumeTheme","primary","main","ThemeProvider","theme","CssBaseline","LocalizationProvider","dateAdapter","AdapterDateFns","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a14a84d.chunk.js","sourcesContent":["import uniqid from \"uniqid\";\n\nexport default class Resume {\n  constructor() {\n    this._contactInformation = undefined;\n    this._educationHistory = [];\n    this._workHistory = [];\n    this._skills = [];\n  }\n\n  addSkill(newSkill) {\n    this._skills = [...this._skills, { skill: newSkill, id: uniqid() }];\n  }\n}\n","export default class ContactInformation {\n  constructor() {\n    this._firstName = \"\";\n    this._lastName = \"\";\n    this._title = \"\";\n    this._phoneNumber = \"\";\n    this._email = \"\";\n    this._website = \"\";\n  }\n}\n","import uniqid from \"uniqid\";\n\nexport default class WorkExp {\n  constructor() {\n    this._jobTitle = \"\";\n    this._orgName = \"\";\n    this._location = \"\";\n    this._description = \"\";\n    this._startDate = \"\";\n    this._endDate = \"\";\n    this._id = uniqid();\n  }\n}\n","import uniqid from \"uniqid\";\n\nexport default class Education {\n  constructor() {\n    this._educationTitle = \"\";\n    this._orgName = \"\";\n    this._location = \"\";\n    this._description = \"\";\n    this._startDate = \"\";\n    this._endDate = \"\";\n    this._id = uniqid();\n  }\n}\n","import { Typography, Box } from \"@mui/material\";\nimport React from \"react\";\n\nconst ResumeHeader = (props) => {\n  const { contactInformation } = props;\n\n  return (\n    <Box\n      sx={{\n        width: \"100%\",\n        bgcolor: \"primary.main\",\n        mt: 2,\n        minHeight: \"80px\",\n      }}\n    >\n      <Typography\n        sx={{\n          color: \"primary.contrastText\",\n          pl: 2,\n          pt: 1,\n        }}\n        variant=\"h4\"\n        component=\"h2\"\n      >{`${contactInformation._firstName}`}</Typography>\n      <Typography\n        sx={{\n          color: \"primary.contrastText\",\n          pb: 1,\n          pl: 3,\n        }}\n      >\n        {contactInformation._title}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ResumeHeader;\n","import React from \"react\";\nimport { Typography, Box, IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nconst ResumeWorkExperience = (props) => {\n  const { workExperience, editWorkInfo, deleteWorkInfo } = props;\n\n  return (\n    <Box\n      sx={{\n        m: 2,\n        mt: 0,\n      }}\n    >\n      <Box sx={{ display: \"flex\", alignItems: \"flex-start\" }}>\n        <Typography variant=\"subtitle2\" color=\"info.dark\" sx={{ mb: -0.5 }}>\n          {workExperience._jobTitle}\n        </Typography>\n        <Box data-html2canvas-ignore=\"true\" sx={{ lineHeight: 0 }}>\n          <IconButton\n            aria-label=\"edit\"\n            onClick={editWorkInfo(workExperience._id)}\n            sx={{ width: \"16px\", height: \"16px\", ml: 1 }}\n          >\n            <EditIcon\n              sx={{ color: \"common.black\", width: \"16px\", height: \"16px\" }}\n            />\n          </IconButton>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={deleteWorkInfo(workExperience._id)}\n            sx={{ width: \"16px\", height: \"16px\", mx: 0.5 }}\n          >\n            <DeleteIcon\n              sx={{ color: \"common.black\", width: \"16px\", height: \"16px\" }}\n            />\n          </IconButton>\n        </Box>\n      </Box>\n      <Typography variant=\"caption\">{workExperience._orgName}</Typography>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography variant=\"caption\">{`${workExperience._startDate} - ${workExperience._endDate}`}</Typography>\n        <Typography variant=\"caption\">{workExperience._location}</Typography>\n      </Box>\n      <Typography variant=\"caption\">{workExperience._description}</Typography>\n    </Box>\n  );\n};\n\nexport default ResumeWorkExperience;\n","import React from \"react\";\nimport ResumeWorkExperience from \"./ResumeWorkExperience\";\nimport { Typography, Box } from \"@mui/material\";\n\nconst ResumeWorkOverview = (props) => {\n  const { workHistory, editWorkInfo, deleteWorkInfo } = props;\n\n  const workExperiences = workHistory.map((value) => {\n    return (\n      <ResumeWorkExperience\n        workExperience={value}\n        key={value._id}\n        editWorkInfo={editWorkInfo}\n        deleteWorkInfo={deleteWorkInfo}\n      />\n    );\n  });\n\n  if (workHistory.length > 0) {\n    return (\n      <Box\n        sx={{\n          width: \"100%\",\n          ml: 1,\n          mt: 1,\n        }}\n      >\n        <Typography variant=\"button\" component=\"h3\">\n          Work Experience\n        </Typography>\n        {workExperiences}\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport default ResumeWorkOverview;\n","import React from \"react\";\nimport { Typography, Box } from \"@mui/material\";\n\nconst ContactField = (props) => {\n  const { data } = props;\n  const DisplayIcon = props.icon;\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        alignItems: \"flex-end\",\n        flexWrap: \"wrap\",\n      }}\n    >\n      <DisplayIcon\n        sx={{\n          pr: 1,\n        }}\n        color=\"primary\"\n      />\n      <Typography\n        sx={{\n          fontSize: \"12px\",\n          mb: \"3px\",\n        }}\n      >\n        {data}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ContactField;\n","import React from \"react\";\nimport { Typography, Box } from \"@mui/material\";\nimport PhoneAndroidSharpIcon from \"@mui/icons-material/PhoneAndroidSharp\";\nimport EmailSharpIcon from \"@mui/icons-material/EmailSharp\";\nimport ComputerSharpIcon from \"@mui/icons-material/ComputerSharp\";\nimport ContactField from \"./ContactField\";\nimport uniqid from \"uniqid\";\n\nconst ResumeContactInfo = (props) => {\n  const { contactInformation } = props;\n\n  let contactFields = [];\n  if (contactInformation._phoneNumber !== \"\") {\n    contactFields.push(\n      <ContactField\n        key={uniqid()}\n        icon={PhoneAndroidSharpIcon}\n        data={contactInformation._phoneNumber}\n      />\n    );\n  }\n\n  if (contactInformation._email !== \"\") {\n    contactFields.push(\n      <ContactField\n        key={uniqid()}\n        icon={EmailSharpIcon}\n        data={contactInformation._email}\n      />\n    );\n  }\n\n  if (contactInformation._website !== \"\") {\n    contactFields.push(\n      <ContactField\n        key={uniqid()}\n        icon={ComputerSharpIcon}\n        data={contactInformation._website}\n      />\n    );\n  }\n\n  if (contactFields.length > 0) {\n    return (\n      <Box\n        sx={{\n          boxSizing: \"border-box\",\n          m: 1,\n          overflow: \"hidden\",\n        }}\n      >\n        <Typography variant=\"button\">Contact</Typography>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            p: 1,\n          }}\n        >\n          {contactFields}\n        </Box>\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport default ResumeContactInfo;\n","import React from \"react\";\nimport { Chip, Box, Typography } from \"@mui/material\";\n\nconst ResumeSkills = (props) => {\n  const { skills } = props;\n\n  const mySkills = skills.map((value) => {\n    return (\n      <Chip\n        sx={{ m: 0 }}\n        label={value.skill}\n        key={value.id}\n        size=\"small\"\n        color=\"primary\"\n      />\n    );\n  });\n\n  if (mySkills.length > 0) {\n    return (\n      <Box\n        sx={{\n          boxSizing: \"border-box\",\n          m: 1,\n        }}\n      >\n        <Typography variant=\"button\" component=\"h4\">\n          Skills\n        </Typography>\n        <Box\n          sx={{\n            boxSizing: \"border-box\",\n            m: 1,\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"2px\",\n            rowGap: \"10px\",\n          }}\n        >\n          {mySkills}\n        </Box>\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport default ResumeSkills;\n","import React from \"react\";\nimport { Typography, Box, IconButton } from \"@mui/material\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\n\nconst ResumeEducationExperience = (props) => {\n  const { educationExperience, deleteEducationInfo, editEducationInfo } = props;\n\n  return (\n    <Box\n      sx={{\n        m: 2,\n        mt: 0,\n      }}\n    >\n      <Box sx={{ display: \"flex\", alignItems: \"flex-start\" }}>\n        <Typography variant=\"subtitle2\" sx={{ mb: -0.5 }} color=\"info.dark\">\n          {educationExperience._educationTitle}\n        </Typography>\n        <Box data-html2canvas-ignore=\"true\" sx={{ lineHeight: 0 }}>\n          <IconButton\n            aria-label=\"edit\"\n            onClick={editEducationInfo(educationExperience._id)}\n            sx={{ width: \"16px\", height: \"16px\", ml: 1 }}\n          >\n            <EditIcon\n              sx={{ color: \"common.black\", width: \"16px\", height: \"16px\" }}\n            />\n          </IconButton>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={deleteEducationInfo(educationExperience._id)}\n            sx={{ width: \"16px\", height: \"16px\", mx: 0.5 }}\n          >\n            <DeleteIcon\n              sx={{ color: \"common.black\", width: \"16px\", height: \"16px\" }}\n            />\n          </IconButton>\n        </Box>\n      </Box>\n\n      <Typography variant=\"caption\">{educationExperience._orgName}</Typography>\n      <Box\n        sx={{\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Typography variant=\"caption\">{`${educationExperience._startDate} - ${educationExperience._endDate}`}</Typography>\n        <Typography variant=\"caption\">\n          {educationExperience._location}\n        </Typography>\n      </Box>\n      <Typography variant=\"caption\">\n        {educationExperience._description}\n      </Typography>\n    </Box>\n  );\n};\n\nexport default ResumeEducationExperience;\n","import React from \"react\";\nimport ResumeEducationExperience from \"./ResumeEducationExperience\";\nimport { Typography, Box } from \"@mui/material\";\n\nconst ResumeEducationOverview = (props) => {\n  const { educationHistory, editEducationInfo, deleteEducationInfo } = props;\n\n  const educationExperiences = educationHistory.map((value) => {\n    return (\n      <ResumeEducationExperience\n        educationExperience={value}\n        key={value._id}\n        deleteEducationInfo={deleteEducationInfo}\n        editEducationInfo={editEducationInfo}\n      />\n    );\n  });\n\n  if (educationHistory.length > 0) {\n    return (\n      <Box\n        sx={{\n          width: \"100%\",\n          ml: 1,\n          mt: 1,\n        }}\n      >\n        <Typography variant=\"button\" component=\"h3\">\n          Education\n        </Typography>\n        {educationExperiences}\n      </Box>\n    );\n  }\n  return null;\n};\n\nexport default ResumeEducationOverview;\n","import React from \"react\";\nimport { Box, Stack } from \"@mui/material\";\nimport ResumeWorkOverview from \"./ResumeWorkOverview\";\nimport ResumeContactInfo from \"./ResumeContactInfo\";\nimport ResumeSkills from \"./ResumeSkills\";\nimport ResumeEducationOverview from \"./ResumeEducationOverview\";\n\nconst ResumeBody = (props) => {\n  const {\n    resume,\n    editWorkInfo,\n    deleteWorkInfo,\n    editEducationInfo,\n    deleteEducationInfo,\n  } = props;\n\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        minWidth: \"100%\",\n      }}\n    >\n      <Box\n        sx={{\n          boxSizing: \"border-box\",\n          width: \"33%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          overflow: \"hidden\",\n        }}\n      >\n        <ResumeContactInfo contactInformation={resume._contactInformation} />\n        <ResumeSkills skills={resume._skills} />\n      </Box>\n      <Stack\n        sx={{\n          boxSizing: \"border-box\",\n          width: \"66%\",\n        }}\n      >\n        <ResumeWorkOverview\n          workHistory={resume._workHistory}\n          editWorkInfo={editWorkInfo}\n          deleteWorkInfo={deleteWorkInfo}\n        />\n        <ResumeEducationOverview\n          educationHistory={resume._educationHistory}\n          editEducationInfo={editEducationInfo}\n          deleteEducationInfo={deleteEducationInfo}\n        />\n      </Stack>\n    </Box>\n  );\n};\n\nexport default ResumeBody;\n","import React from \"react\";\nimport { Card, Box } from \"@mui/material\";\nimport ResumeHeader from \"./ResumeHeader\";\nimport ResumeBody from \"./ResumeBody\";\n\nconst ResumeOutput = (props) => {\n  const {\n    resume,\n    editWorkInfo,\n    deleteWorkInfo,\n    editEducationInfo,\n    deleteEducationInfo,\n  } = props;\n\n  const mystyle = {\n    width: \"600px\",\n    height: \"776px\",\n  };\n\n  return (\n    <Box\n      sx={{\n        minWidth: \"max(max-content, 100%)\",\n        display: \"flex\",\n        justifyContent: \"center\",\n      }}\n    >\n      <Card\n        sx={{\n          width: \"600px\",\n          height: \"776px\",\n          m: 2,\n          mt: 12,\n        }}\n        elevation={12}\n      >\n        <div className=\"resume-to-capture\" style={mystyle}>\n          <ResumeHeader contactInformation={resume._contactInformation} />\n          <ResumeBody\n            resume={resume}\n            editWorkInfo={editWorkInfo}\n            deleteWorkInfo={deleteWorkInfo}\n            editEducationInfo={editEducationInfo}\n            deleteEducationInfo={deleteEducationInfo}\n          />\n        </div>\n      </Card>\n    </Box>\n  );\n};\n\nexport default ResumeOutput;\n","import { useState } from \"react\";\nimport { Box } from \"@mui/system\";\nimport { SpeedDial, SpeedDialAction, SpeedDialIcon } from \"@mui/material\";\nimport PersonIcon from \"@mui/icons-material/Person\";\nimport WorkIcon from \"@mui/icons-material/Work\";\nimport SchoolIcon from \"@mui/icons-material/School\";\nimport BuildIcon from \"@mui/icons-material/Build\";\nimport ColorLensIcon from \"@mui/icons-material/ColorLens\";\n\nconst AddToResumeSpeedDial = (props) => {\n  const [open, setOpen] = useState(false);\n  const {\n    setContactOpen,\n    setWorkOpen,\n    setEducationOpen,\n    setSkillsOpen,\n    setCustomizeOpen,\n  } = props;\n\n  const handleClickOpen = () => {\n    if (open) {\n      setOpen(false);\n    } else {\n      setOpen(true);\n    }\n  };\n\n  // Don't Close the SpeedDial if the mouse leaves, I don't like that user experience\n  const handleClose = (e, reason) => {\n    if (reason !== \"mouseLeave\") {\n      setOpen(false);\n    }\n  };\n\n  return (\n    <Box\n      sx={{\n        width: \"200px\",\n        transform: \"translateZ(0px)\",\n        flexGrow: 1,\n      }}\n    >\n      <SpeedDial\n        ariaLabel=\"Add to Resume\"\n        icon={<SpeedDialIcon />}\n        onClose={handleClose}\n        onClick={handleClickOpen}\n        open={open}\n        direction=\"down\"\n        sx={{ position: \"absolute\", top: 16, left: 16 }}\n      >\n        <SpeedDialAction\n          key=\"Contact Information\"\n          icon={<PersonIcon />}\n          tooltipTitle=\"Contact Information\"\n          tooltipOpen\n          onClick={setContactOpen}\n          tooltipPlacement=\"right\"\n          sx={{\n            \"& .MuiSpeedDialAction-staticTooltipLabel\": {\n              width: \"max-content\",\n            },\n          }}\n        />\n        <SpeedDialAction\n          key=\"Work Experience\"\n          icon={<WorkIcon />}\n          tooltipTitle=\"Work Experience\"\n          tooltipOpen\n          onClick={setWorkOpen}\n          tooltipPlacement=\"right\"\n          sx={{\n            \"& .MuiSpeedDialAction-staticTooltipLabel\": {\n              width: \"max-content\",\n            },\n          }}\n        />\n        <SpeedDialAction\n          key=\"Education\"\n          icon={<SchoolIcon />}\n          tooltipTitle=\"Education\"\n          tooltipOpen\n          onClick={setEducationOpen}\n          tooltipPlacement=\"right\"\n          sx={{\n            \"& .MuiSpeedDialAction-staticTooltipLabel\": {\n              width: \"max-content\",\n            },\n          }}\n        />\n        <SpeedDialAction\n          key=\"Skills\"\n          icon={<BuildIcon />}\n          tooltipTitle=\"Skills\"\n          tooltipOpen\n          onClick={setSkillsOpen}\n          tooltipPlacement=\"right\"\n          sx={{\n            \"& .MuiSpeedDialAction-staticTooltipLabel\": {\n              width: \"max-content\",\n            },\n          }}\n        />\n        <SpeedDialAction\n          key=\"Customize\"\n          icon={<ColorLensIcon />}\n          tooltipTitle=\"Customize\"\n          tooltipOpen\n          onClick={setCustomizeOpen}\n          tooltipPlacement=\"right\"\n          sx={{\n            \"& .MuiSpeedDialAction-staticTooltipLabel\": {\n              width: \"max-content\",\n            },\n          }}\n        />\n      </SpeedDial>\n    </Box>\n  );\n};\n\nexport default AddToResumeSpeedDial;\n","import { AppBar, Toolbar, IconButton, Typography, Box } from \"@mui/material\";\nimport PictureAsPdfIcon from \"@mui/icons-material/PictureAsPdf\";\nimport LightModeIcon from \"@mui/icons-material/LightMode\";\nimport DarkModeIcon from \"@mui/icons-material/DarkMode\";\nimport React from \"react\";\n\nconst AppHeader = (props) => {\n  const { saveResumeToPdf, toggleDarkMode, mode } = props;\n\n  let modeButton, iconColor;\n  if (mode === \"light\") {\n    iconColor = \"primary.contrastText\";\n    modeButton = (\n      <IconButton\n        aria-label=\"dark mode\"\n        sx={{ color: \"primary.contrastText\" }}\n        onClick={toggleDarkMode}\n      >\n        <DarkModeIcon />\n      </IconButton>\n    );\n  } else {\n    iconColor = \"default\";\n    modeButton = (\n      <IconButton aria-label=\"light mode\" onClick={toggleDarkMode}>\n        <LightModeIcon />\n      </IconButton>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <AppBar>\n        <Toolbar\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n          }}\n        >\n          <Typography variant=\"h6\" component=\"div\">\n            Resume Creator\n          </Typography>\n          <Box>\n            {modeButton}\n            <IconButton\n              aria-label=\"save as pdf\"\n              sx={{ color: iconColor }}\n              onClick={saveResumeToPdf}\n            >\n              <PictureAsPdfIcon />\n            </IconButton>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </React.Fragment>\n  );\n};\n\nexport default AppHeader;\n","export class LocalStorageHelper {\n  constructor() {\n    if (typeof Storage !== \"undefined\") {\n      this._storageAvailable = true;\n    } else {\n      this._storageAvailable = false;\n    }\n  }\n\n  saveItem(key, objectToSave) {\n    if (!this._storageAvailable) {\n      return;\n    }\n\n    window.localStorage.setItem(key, JSON.stringify(objectToSave));\n  }\n\n  clearItems() {\n    if (!this._storageAvailable) {\n      return;\n    }\n\n    window.localStorage.clear();\n  }\n\n  retrieveItem(key) {\n    if (!this._storageAvailable) {\n      return undefined;\n    }\n\n    return JSON.parse(window.localStorage.getItem(key));\n  }\n\n  removeItem(key) {\n    if (!this._storageAvailable) {\n      return;\n    }\n\n    window.localStorage.removeItem(key);\n  }\n}\n","import * as React from \"react\";\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\n\nconst DeleteConfirmation = (props) => {\n  const { handleClose, deleteWork, deleteEducation, open, deleteMode } = props;\n\n  return (\n    <Dialog open={open} onClose={handleClose}>\n      <DialogTitle>Are you sure you want to delete?</DialogTitle>\n      <DialogContent>\n        <form>\n          <DialogActions>\n            <Button onClick={handleClose}>Cancel</Button>\n            <Button\n              type=\"submit\"\n              onClick={deleteMode === \"work\" ? deleteWork : deleteEducation}\n            >\n              Delete\n            </Button>\n          </DialogActions>\n        </form>\n      </DialogContent>\n    </Dialog>\n  );\n};\n\nexport default DeleteConfirmation;\n","import * as React from \"react\";\nimport {\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport { validate } from \"email-validator\";\n\nexport default class EditContactForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const { contactInformation } = this.props;\n    this.saveFormInfo = this.saveFormInfo.bind(this);\n\n    this.state = {\n      name: contactInformation._firstName,\n      title: contactInformation._title,\n      email: contactInformation._email,\n      phone: contactInformation._phoneNumber,\n      website: contactInformation._website,\n      phoneError: false,\n      phoneHelperText: \"\",\n      phoneColor: \"\",\n      emailError: false,\n      emailHelperText: \"\",\n      emailColor: \"\",\n    };\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({\n      ...this.state,\n      [name]: event.target.value,\n    });\n  };\n\n  validatePhoneNumber = (name) => (event) => {\n    const phoneRegex =\n      /^\\+?(\\s*)?(\\d{1,2})?(\\s*)?-?(\\s*)?\\(?\\d{3}\\)?(\\s*)?-?(\\s*)?\\d{3}(\\s*)?-?(\\s*)?(\\s*)?\\d{4}$/;\n    if (!event.target.value.match(phoneRegex) && event.target.value !== \"\") {\n      this.setState({\n        phoneError: true,\n        phoneHelperText:\n          \"Enter 10 digit Phone Number with or without country code, #-###-###-####\",\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        [name]: event.target.value,\n        phoneError: false,\n        phoneHelperText: \"\",\n        phoneColor: \"success\",\n      });\n    }\n  };\n\n  validateEmail = (name) => (event) => {\n    if (!validate(event.target.value) && event.target.value !== \"\") {\n      this.setState({\n        emailError: true,\n        emailHelperText: \"Enter valid email address\",\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        [name]: event.target.value,\n        emailError: false,\n        emailHelperText: \"\",\n        emailColor: \"success\",\n      });\n    }\n  };\n\n  saveFormInfo(e) {\n    e.preventDefault();\n    const { updateContactInfo } = this.props;\n    updateContactInfo(this.state);\n    this.props.handleClose();\n  }\n\n  render() {\n    const { open, handleClose, contactInformation } = this.props;\n    return (\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>Edit Contact Details</DialogTitle>\n        <DialogContent>\n          <form>\n            <TextField\n              autoFocus\n              margin=\"dense\"\n              id=\"name\"\n              label=\"Name\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={\n                contactInformation._firstName +\n                \" \" +\n                contactInformation._lastName\n              }\n              onChange={this.handleChange(\"name\")}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"title\"\n              label=\"Title\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={contactInformation._title}\n              onChange={this.handleChange(\"title\")}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"email\"\n              label=\"Email Address\"\n              type=\"email\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={contactInformation._email}\n              onChange={this.validateEmail(\"email\")}\n              error={this.state.emailError}\n              helperText={this.state.emailHelperText}\n              color={this.state.emailColor}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"phone-number\"\n              label=\"Phone Number\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={contactInformation._phoneNumber}\n              onChange={this.validatePhoneNumber(\"phone\")}\n              error={this.state.phoneError}\n              helperText={this.state.phoneHelperText}\n              color={this.state.phoneColor}\n            />\n            <TextField\n              margin=\"dense\"\n              id=\"website\"\n              label=\"Website\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={contactInformation._website}\n              onChange={this.handleChange(\"website\")}\n            />\n\n            <DialogActions>\n              <Button onClick={handleClose}>Cancel</Button>\n              <Button type=\"submit\" onClick={this.saveFormInfo}>\n                Save\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Box,\n  Stack,\n  Button,\n  TextField,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n} from \"@mui/material\";\nimport DesktopDatePicker from \"@mui/lab/DesktopDatePicker\";\n\nexport default class EditWorkExpForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveFormInfo = this.saveFormInfo.bind(this);\n    this.resetState = this.resetState.bind(this);\n\n    this.state = {\n      currentDate: Date.now(),\n      startDate: Date.now(),\n      endDate: Date.now(),\n      title: \"\",\n      company: \"\",\n      location: \"\",\n      description: [\"\"],\n    };\n\n    this.modes = {\n      work: {\n        add: \"Add Work Experience\",\n        edit: \"Edit Work Experience\",\n        title: \"Job Title\",\n        company: \"Workplace/Company\",\n      },\n      education: {\n        add: \"Add Education\",\n        edit: \"Edit Education\",\n        title: \"Education Program\",\n        company: \"University/College\",\n      },\n    };\n\n    this.defaultValues = {\n      title: \"\",\n      company: \"\",\n      location: \"\",\n      description: \"\",\n      startDate: Date.now(),\n      endDate: Date.now(),\n    };\n  }\n\n  resetState() {\n    this.setState({\n      currentDate: Date.now(),\n      startDate: Date.now(),\n      endDate: Date.now(),\n      title: \"\",\n      company: \"\",\n      location: \"\",\n      description: \"\",\n    });\n  }\n\n  handleChange = (name) => (event) => {\n    this.setState({\n      ...this.state,\n      [name]: event.target.value,\n    });\n  };\n\n  handleStartDateChange = (newValue) => {\n    this.setState({\n      ...this.state,\n      startDate: newValue,\n    });\n  };\n\n  handleEndDateChange = (newValue) => {\n    this.setState({\n      ...this.state,\n      endDate: newValue,\n    });\n  };\n\n  saveFormInfo(e) {\n    e.preventDefault();\n    const { updateWorkInfo, handleClose, updateEducationInfo, workMode, mode } =\n      this.props;\n\n    if (mode === \"add\") {\n      workMode === \"work\"\n        ? updateWorkInfo(this.state, false)\n        : updateEducationInfo(this.state, false);\n    } else if (mode === \"edit\") {\n      workMode === \"work\"\n        ? updateWorkInfo(this.state, true)\n        : updateEducationInfo(this.state, true);\n    }\n\n    this.resetState();\n    handleClose();\n  }\n\n  // The purpose of this is to add to the state of the component those fields that are reloaded on an Edit action\n  // When the user clicks edit, we fill the defaultValues with information from the entry they wish to edit, however\n  // this was not actually updating the state, so if the user clicked edit, and then didn't modify any of the entries,\n  // handleChange wasn't going to be called to update the state, and thus the data sent up to the app, this function\n  // alleviates that issue\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (\n      prevProps.idToPopulate !== this.props.idToPopulate &&\n      this.props.idToPopulate !== \"\"\n    ) {\n      this.setState({\n        title: this.defaultValues[\"title\"],\n        company: this.defaultValues[\"company\"],\n        location: this.defaultValues[\"location\"],\n        description: this.defaultValues[\"description\"],\n        startDate: this.defaultValues[\"startDate\"],\n        endDate: this.defaultValues[\"endDate\"],\n      });\n    } else if (\n      prevProps.idToPopulate !== this.props.idToPopulate &&\n      this.props.idToPopulate === \"\"\n    ) {\n      //there is now no idToPopulate, so clear defaults\n      this.defaultValues = {\n        title: \"\",\n        company: \"\",\n        location: \"\",\n        description: \"\",\n        startDate: Date.now(),\n        endDate: Date.now(),\n      };\n      this.setState({\n        title: this.defaultValues[\"title\"],\n        company: this.defaultValues[\"company\"],\n        location: this.defaultValues[\"location\"],\n        description: this.defaultValues[\"description\"],\n        startDate: this.defaultValues[\"startDate\"],\n        endDate: this.defaultValues[\"endDate\"],\n      });\n    }\n  }\n\n  getDateFromString(str) {\n    const year = str.match(/^\\d{4}/);\n    const month = str.match(/\\d{2}$/);\n\n    return new Date(Number(year), Number(month) - 1);\n  }\n\n  render() {\n    const {\n      open,\n      handleClose,\n      workMode,\n      idToPopulate,\n      mode,\n      workHistory,\n      educationHistory,\n    } = this.props;\n\n    if (idToPopulate !== \"\") {\n      if (workMode === \"work\") {\n        const workEntry = workHistory.filter((element) => {\n          if (element._id === idToPopulate) {\n            return true;\n          }\n          return false;\n        });\n\n        this.defaultValues[\"title\"] = workEntry[0]._jobTitle;\n        this.defaultValues[\"company\"] = workEntry[0]._orgName;\n        this.defaultValues[\"location\"] = workEntry[0]._location;\n        this.defaultValues[\"description\"] = workEntry[0]._description;\n\n        const sDate = this.getDateFromString(workEntry[0]._startDate);\n        const eDate = this.getDateFromString(workEntry[0]._endDate);\n        this.defaultValues[\"startDate\"] = sDate;\n        this.defaultValues[\"endDate\"] = eDate;\n      } else if (workMode === \"education\") {\n        const educationEntry = educationHistory.filter((element) => {\n          if (element._id === idToPopulate) {\n            return true;\n          }\n          return false;\n        });\n\n        this.defaultValues[\"title\"] = educationEntry[0]._educationTitle;\n        this.defaultValues[\"company\"] = educationEntry[0]._orgName;\n        this.defaultValues[\"location\"] = educationEntry[0]._location;\n        this.defaultValues[\"description\"] = educationEntry[0]._description;\n        const sDate = this.getDateFromString(educationEntry[0]._startDate);\n        const eDate = this.getDateFromString(educationEntry[0]._endDate);\n        this.defaultValues[\"startDate\"] = sDate;\n        this.defaultValues[\"endDate\"] = eDate;\n      }\n    }\n\n    return (\n      <Dialog open={open} onClose={handleClose}>\n        <DialogTitle>{this.modes[workMode][mode]}</DialogTitle>\n        <DialogContent>\n          <form>\n            <TextField\n              autoFocus\n              margin=\"normal\"\n              id=\"title\"\n              label={this.modes[workMode][\"title\"]}\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={this.defaultValues[\"title\"]}\n              onChange={this.handleChange(\"title\")}\n            />\n            <div>\n              <Box\n                sx={{\n                  my: 1,\n                  width: \"100%\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <TextField\n                  sx={{ flexGrow: 1, mr: 1 }}\n                  id=\"company\"\n                  label={this.modes[workMode][\"company\"]}\n                  type=\"text\"\n                  variant=\"outlined\"\n                  defaultValue={this.defaultValues[\"company\"]}\n                  onChange={this.handleChange(\"company\")}\n                />\n                <TextField\n                  sx={{ flexGrow: 1, ml: 1 }}\n                  id=\"location\"\n                  label=\"Location\"\n                  type=\"text\"\n                  variant=\"outlined\"\n                  defaultValue={this.defaultValues[\"location\"]}\n                  onChange={this.handleChange(\"location\")}\n                />\n              </Box>\n            </div>\n            <Stack sx={{ my: 2 }} direction=\"row\" spacing={2}>\n              <DesktopDatePicker\n                views={[\"year\", \"month\"]}\n                label=\"Start Date\"\n                value={this.state.startDate}\n                onChange={this.handleStartDateChange}\n                renderInput={(params) => <TextField {...params} />}\n              />\n              <DesktopDatePicker\n                views={[\"year\", \"month\"]}\n                label=\"End Date\"\n                value={this.state.endDate}\n                onChange={this.handleEndDateChange}\n                renderInput={(params) => <TextField {...params} />}\n              />\n            </Stack>\n            <TextField\n              margin=\"normal\"\n              id=\"description\"\n              label=\"Description\"\n              type=\"text\"\n              fullWidth\n              variant=\"outlined\"\n              defaultValue={this.defaultValues[\"description\"]}\n              onChange={this.handleChange(\"description\")}\n            />\n\n            <DialogActions>\n              <Button onClick={handleClose}>Cancel</Button>\n              <Button type=\"submit\" onClick={this.saveFormInfo}>\n                {idToPopulate !== \"\" ? \"Edit\" : \"Save\"}\n              </Button>\n            </DialogActions>\n          </form>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Box,\n  Button,\n  Chip,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  TextField,\n  IconButton,\n} from \"@mui/material\";\n\nimport AddBoxIcon from \"@mui/icons-material/AddBox\";\n\nexport default class EditSkillsForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.saveFormInfo = this.saveFormInfo.bind(this);\n  }\n\n  saveFormInfo(e) {\n    e.preventDefault();\n    const { updateSkills } = this.props;\n    if (e.target[0].value !== \"\") {\n      updateSkills(e.target[0].value);\n    }\n\n    e.target[0].value = \"\";\n  }\n\n  handleChange(e) {\n    // console.log(e.target.value);\n  }\n\n  render() {\n    const { open, handleClose, skills, deleteSkill } = this.props;\n\n    const skillChips = skills.map((value) => {\n      return (\n        <Chip\n          sx={{ m: 0.5 }}\n          label={value.skill}\n          key={value.id}\n          size=\"small\"\n          color=\"primary\"\n          onDelete={deleteSkill(value.id)}\n        />\n      );\n    });\n\n    return (\n      <Dialog open={open} onClose={handleClose} fullWidth>\n        <DialogTitle>Edit Skills</DialogTitle>\n        <Box sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n          <DialogContent>\n            {skillChips}\n            <form onSubmit={this.saveFormInfo}>\n              <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                <TextField\n                  sx={{ mr: 1 }}\n                  autoFocus\n                  margin=\"normal\"\n                  id=\"title\"\n                  label=\"New Skill\"\n                  type=\"text\"\n                  fullWidth\n                  variant=\"outlined\"\n                  defaultValue=\"\"\n                  onChange={this.handleChange}\n                />\n                <div>\n                  <IconButton\n                    sx={{ flexGrow: 0 }}\n                    aria-label=\"add skill\"\n                    type=\"submit\"\n                  >\n                    <AddBoxIcon />\n                  </IconButton>\n                </div>\n              </Box>\n\n              <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n              </DialogActions>\n            </form>\n          </DialogContent>\n        </Box>\n      </Dialog>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  Button,\n  IconButton,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Box,\n  Typography,\n} from \"@mui/material\";\n\nimport uniqid from \"uniqid\";\n\nexport default class CustomizeForm extends React.Component {\n  render() {\n    const { open, handleClose, customColors, updateColor } = this.props;\n\n    const colorButtons = customColors.map((element) => {\n      return (\n        <IconButton\n          key={uniqid()}\n          variant=\"contained\"\n          size=\"large\"\n          onClick={updateColor(element)}\n          sx={{\n            backgroundColor: element[500],\n            mx: 2,\n            my: 2,\n            border: \"solid 3px black\",\n          }}\n        ></IconButton>\n      );\n    });\n\n    return (\n      <Dialog open={open} onClose={handleClose} fullWidth>\n        <DialogTitle>Customize Resume</DialogTitle>\n        <DialogContent>\n          <Typography variant=\"subtitle1\">Select Color</Typography>\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", flexWrap: \"wrap\" }}>\n            {colorButtons}\n          </Box>\n          <DialogActions>\n            <Button onClick={handleClose}>Close</Button>\n          </DialogActions>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n}\n","import React from \"react\";\nimport Resume from \"./cv/Resume\";\nimport ContactInformation from \"./cv/ContactInformation\";\nimport WorkExp from \"./cv/WorkExp\";\nimport Education from \"./cv/Education\";\nimport ResumeOutput from \"./components/ResumeOutput\";\nimport AddToResumeSpeedDial from \"./components/AddToResumeSpeedDial\";\nimport AppHeader from \"./components/AppHeader\";\nimport { Box } from \"@mui/system\";\nimport { createTheme, CssBaseline } from \"@mui/material\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport uniqid from \"uniqid\";\nimport html2canvas from \"html2canvas\";\nimport jsPDF from \"jspdf\";\nimport { LocalStorageHelper } from \"./localStorageHelper\";\nimport DeleteConfirmation from \"./components/DeleteConfirmation\";\nimport AdapterDateFns from \"@mui/lab/AdapterDateFns\";\nimport { LocalizationProvider } from \"@mui/lab\";\nimport EditContactForm from \"./components/EditContactForm\";\nimport EditWorkExpForm from \"./components/EditWorkExpForm\";\nimport EditSkillsForm from \"./components/EditSkillsForm\";\nimport CustomizeForm from \"./components/CustomizeForm\";\nimport { format } from \"date-fns\";\nimport {\n  red,\n  pink,\n  purple,\n  deepPurple,\n  indigo,\n  blue,\n  lightBlue,\n  cyan,\n  teal,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  amber,\n  orange,\n  deepOrange,\n} from \"@mui/material/colors\";\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.storageHelper = new LocalStorageHelper();\n    let storedResume = this.storageHelper.retrieveItem(\"resume\");\n\n    const myResume = new Resume();\n    const contactInfo = new ContactInformation();\n    contactInfo._firstName = \"\";\n    contactInfo._lastName = \"\";\n    contactInfo._title = \"\";\n    contactInfo._email = \"\";\n    contactInfo._phoneNumber = \"\";\n    contactInfo._website = \"\";\n\n    if (storedResume != null) {\n      contactInfo._firstName =\n        storedResume._contactInformation._firstName.trim();\n      contactInfo._lastName = \"\";\n      contactInfo._title = storedResume._contactInformation._title;\n      contactInfo._email = storedResume._contactInformation._email;\n      contactInfo._phoneNumber = storedResume._contactInformation._phoneNumber;\n      contactInfo._website = storedResume._contactInformation._website;\n\n      for (let i = 0; i < storedResume._skills.length; i++) {\n        myResume.addSkill(storedResume._skills[i].skill);\n      }\n\n      for (let i = 0; i < storedResume._workHistory.length; i++) {\n        const work = new WorkExp();\n        work._jobTitle = storedResume._workHistory[i]._jobTitle;\n        work._orgName = storedResume._workHistory[i]._orgName;\n        work._location = storedResume._workHistory[i]._location;\n        work._startDate = storedResume._workHistory[i]._startDate;\n        work._endDate = storedResume._workHistory[i]._endDate;\n        work._description = storedResume._workHistory[i]._description;\n        myResume._workHistory.push(work);\n      }\n\n      for (let i = 0; i < storedResume._educationHistory.length; i++) {\n        const edu = new Education();\n        edu._educationTitle = storedResume._educationHistory[i]._educationTitle;\n        edu._orgName = storedResume._educationHistory[i]._orgName;\n        edu._location = storedResume._educationHistory[i]._location;\n        edu._startDate = storedResume._educationHistory[i]._startDate;\n        edu._endDate = storedResume._educationHistory[i]._endDate;\n        edu._description = storedResume._educationHistory[i]._description;\n        myResume._educationHistory.push(edu);\n      }\n    }\n\n    myResume._contactInformation = contactInfo;\n\n    let mode = this.storageHelper.retrieveItem(\"mode\");\n    if (mode === null) {\n      mode = \"light\";\n    }\n\n    let resColor = this.storageHelper.retrieveItem(\"color\");\n    if (resColor === null) {\n      resColor = blue;\n    }\n\n    this.state = {\n      resume: myResume,\n      mode: mode,\n      deleteConfirmationOpen: false,\n      deleteWorkKey: \"\",\n      deleteEduKey: \"\",\n      deleteMode: \"\",\n      contactOpen: false,\n      workOpen: false,\n      workMode: \"work\",\n      addEditMode: \"add\",\n      skillsOpen: false,\n      customizeOpen: false,\n      idToPopulate: \"\",\n      resumeColor: resColor,\n    };\n\n    this.customColors = [\n      red,\n      pink,\n      purple,\n      deepPurple,\n      indigo,\n      blue,\n      lightBlue,\n      cyan,\n      teal,\n      green,\n      lightGreen,\n      lime,\n      yellow,\n      amber,\n      orange,\n      deepOrange,\n    ];\n\n    this.updateContactInfo = this.updateContactInfo.bind(this);\n    this.updateWorkInfo = this.updateWorkInfo.bind(this);\n    this.updateEducationInfo = this.updateEducationInfo.bind(this);\n    this.updateSkills = this.updateSkills.bind(this);\n    this.saveResumeToPdf = this.saveResumeToPdf.bind(this);\n    this.toggleDarkMode = this.toggleDarkMode.bind(this);\n    this.closeDeleteConfirmation = this.closeDeleteConfirmation.bind(this);\n    this.confirmDeleteWorkInfo = this.confirmDeleteWorkInfo.bind(this);\n    this.confirmDeleteEducationInfo =\n      this.confirmDeleteEducationInfo.bind(this);\n    this.openEditContactInformationDialog =\n      this.openEditContactInformationDialog.bind(this);\n    this.setContactOpen = this.setContactOpen.bind(this);\n    this.handleContactClose = this.handleContactClose.bind(this);\n    this.setWorkOpen = this.setWorkOpen.bind(this);\n    this.setEducationOpen = this.setEducationOpen.bind(this);\n    this.handleWorkClose = this.handleWorkClose.bind(this);\n    this.setSkillsOpen = this.setSkillsOpen.bind(this);\n    this.handleSkillsClose = this.handleSkillsClose.bind(this);\n    this.setCustomizeOpen = this.setCustomizeOpen.bind(this);\n    this.handleCustomizeClose = this.handleCustomizeClose.bind(this);\n  }\n\n  setAddEditMode(value) {\n    this.setState({\n      addEditMode: value,\n    });\n  }\n\n  setContactOpen() {\n    this.setState({\n      contactOpen: true,\n    });\n  }\n\n  setWorkOpen() {\n    this.setWorkMode(\"work\");\n    this.setAddEditMode(\"add\");\n    this.setState({\n      workOpen: true,\n      idToPopulate: \"\",\n    });\n  }\n\n  setEducationOpen() {\n    this.setWorkMode(\"education\");\n    this.setAddEditMode(\"add\");\n    this.setState({ workOpen: true, idToPopulate: \"\" });\n  }\n\n  setSkillsOpen() {\n    this.setState({ skillsOpen: true });\n  }\n\n  setCustomizeOpen() {\n    this.setState({ customizeOpen: true });\n  }\n\n  setWorkMode(value) {\n    this.setState({\n      workMode: value,\n    });\n  }\n\n  handleWorkClose() {\n    this.setState({ workOpen: false });\n  }\n\n  handleSkillsClose() {\n    this.setState({ skillsOpen: false });\n  }\n\n  handleCustomizeClose() {\n    this.setState({ customizeOpen: false });\n  }\n\n  handleContactClose() {\n    this.setState({ contactOpen: false });\n  }\n\n  openEditContactInformationDialog = () => {\n    this.setContactOpen(true);\n  };\n\n  updateContactInfo(info) {\n    this.setState((prevState) => {\n      let resume = Object.assign({}, prevState.resume);\n\n      resume._contactInformation._firstName = info.name;\n      resume._contactInformation._lastName = \"\";\n      resume._contactInformation._title = info.title;\n      resume._contactInformation._email = info.email;\n      resume._contactInformation._phoneNumber = info.phone;\n      resume._contactInformation._website = info.website;\n      this.storageHelper.saveItem(\"resume\", resume);\n      return { resume };\n    });\n  }\n\n  updateWorkInfo(info, edit) {\n    let work;\n\n    if (!edit) {\n      work = new WorkExp();\n    } else {\n      work = this.state.resume._workHistory.filter((element) => {\n        if (element._id === this.state.idToPopulate) {\n          return true;\n        }\n        return false;\n      })[0];\n    }\n    work._jobTitle = info.title;\n    work._orgName = info.company;\n    work._location = info.location;\n    work._startDate = format(info.startDate, \"yyyy/MM\");\n    work._endDate = format(info.endDate, \"yyyy/MM\");\n    work._description = info.description;\n\n    this.setState((prevState) => {\n      let resume = Object.assign({}, prevState.resume);\n\n      if (!edit) {\n        resume._workHistory = [...resume._workHistory, work];\n      } else {\n        resume._workHistory = resume._workHistory\n          .filter((element) => {\n            if (element._id !== this.state.idToPopulate) {\n              return true;\n            }\n            return false;\n          })\n          .concat(work);\n      }\n\n      this.storageHelper.saveItem(\"resume\", resume);\n      return { resume };\n    });\n\n    this.setState({ idToPopulate: \"\" });\n  }\n\n  editWorkInfo = (info) => (event) => {\n    console.log(info);\n    this.setAddEditMode(\"edit\");\n    this.setWorkMode(\"work\");\n    this.setState({ idToPopulate: info, workOpen: true });\n  };\n\n  deleteWorkInfo = (info) => (event) => {\n    this.setState({\n      deleteConfirmationOpen: true,\n      deleteWorkKey: info,\n      deleteMode: \"work\",\n    });\n  };\n\n  closeDeleteConfirmation() {\n    this.setState({\n      deleteConfirmationOpen: false,\n    });\n  }\n\n  confirmDeleteWorkInfo(e) {\n    e.preventDefault();\n    // console.log(\"DELETE \" + this.state.deleteWorkKey);\n\n    this.setState((prevState) => {\n      let resume = Object.assign({}, prevState.resume);\n\n      resume._workHistory = resume._workHistory.filter((element) => {\n        if (element._id === this.state.deleteWorkKey) {\n          return false;\n        }\n        return true;\n      });\n      this.storageHelper.saveItem(\"resume\", resume);\n      return { resume };\n    });\n\n    this.setState({ idToPopulate: \"\" });\n\n    this.closeDeleteConfirmation();\n  }\n\n  editEducationInfo = (info) => (event) => {\n    console.log(info);\n    this.setAddEditMode(\"edit\");\n    this.setWorkMode(\"education\");\n    this.setState({ idToPopulate: info, workOpen: true });\n  };\n\n  deleteEducationInfo = (info) => (event) => {\n    this.setState({\n      deleteConfirmationOpen: true,\n      deleteEduKey: info,\n      deleteMode: \"education\",\n    });\n  };\n\n  confirmDeleteEducationInfo(e) {\n    e.preventDefault();\n\n    this.setState((prevState) => {\n      let resume = Object.assign({}, prevState.resume);\n\n      resume._educationHistory = resume._educationHistory.filter((element) => {\n        if (element._id === this.state.deleteEduKey) {\n          return false;\n        }\n        return true;\n      });\n      this.storageHelper.saveItem(\"resume\", resume);\n      return { resume };\n    });\n\n    this.setState({ idToPopulate: \"\" });\n\n    this.closeDeleteConfirmation();\n  }\n\n  updateEducationInfo(info, edit) {\n    let education;\n\n    if (!edit) {\n      education = new Education();\n    } else {\n      education = this.state.resume._educationHistory.filter((element) => {\n        if (element._id === this.state.idToPopulate) {\n          return true;\n        }\n        return false;\n      })[0];\n    }\n\n    education._educationTitle = info.title;\n    education._orgName = info.company;\n    education._location = info.location;\n    education._startDate = format(info.startDate, \"yyyy/MM\");\n    education._endDate = format(info.endDate, \"yyyy/MM\");\n    education._description = info.description;\n\n    this.setState((prevState) => {\n      let resume = Object.assign({}, prevState.resume);\n\n      if (!edit) {\n        resume._educationHistory = [...resume._educationHistory, education];\n      } else {\n        resume._educationHistory = resume._educationHistory\n          .filter((element) => {\n            if (element._id !== this.state.idToPopulate) {\n              return true;\n            }\n            return false;\n          })\n          .concat(education);\n      }\n\n      this.storageHelper.saveItem(\"resume\", resume);\n      return { resume };\n    });\n\n    this.setState({ idToPopulate: \"\" });\n  }\n\n  updateSkills(info) {\n    this.setState((prevState) => {\n      let resume = Object.assign({}, prevState.resume);\n\n      resume._skills = [...resume._skills, { skill: info, id: uniqid() }];\n      this.storageHelper.saveItem(\"resume\", resume);\n      return { resume };\n    });\n  }\n\n  deleteSkill = (info) => (event) => {\n    event.preventDefault();\n\n    this.setState((prevState) => {\n      let resume = Object.assign({}, prevState.resume);\n\n      resume._skills = resume._skills.filter((element) => {\n        if (element.id === info) {\n          return false;\n        }\n        return true;\n      });\n      this.storageHelper.saveItem(\"resume\", resume);\n      return { resume };\n    });\n  };\n\n  updateColor = (info) => (event) => {\n    this.setState({\n      resumeColor: info,\n    });\n    this.storageHelper.saveItem(\"color\", info);\n  };\n\n  saveResumeToPdf() {\n    const options = { scale: 2 };\n    html2canvas(document.querySelector(\".resume-to-capture\"), options).then(\n      function (canvas) {\n        const imgData = canvas.toDataURL(\"image/png\");\n        const pdf = new jsPDF({\n          unit: \"in\",\n          format: [8.5, 11],\n        });\n        pdf.addImage(imgData, \"JPEG\", 0, 0.25, 8.5, 10.75);\n        pdf.save(\"download.pdf\");\n      }\n    );\n  }\n\n  toggleDarkMode() {\n    let newMode = this.state.mode === \"light\" ? \"dark\" : \"light\";\n    this.setState({\n      mode: newMode,\n    });\n\n    this.storageHelper.saveItem(\"mode\", newMode);\n  }\n\n  render() {\n    const myTheme = createTheme({\n      palette: {\n        mode: this.state.mode,\n      },\n    });\n\n    const resumeTheme = createTheme({\n      palette: {\n        primary: {\n          main: this.state.resumeColor[500],\n        },\n        info: {\n          main: this.state.resumeColor[700],\n        },\n      },\n    });\n\n    return (\n      <React.Fragment>\n        <ThemeProvider theme={myTheme}>\n          <CssBaseline />\n\n          <AppHeader\n            saveResumeToPdf={this.saveResumeToPdf}\n            toggleDarkMode={this.toggleDarkMode}\n            mode={this.state.mode}\n          />\n\n          <AddToResumeSpeedDial\n            resume={this.state.resume}\n            updateContactInfo={this.updateContactInfo}\n            updateWorkInfo={this.updateWorkInfo}\n            updateEducationInfo={this.updateEducationInfo}\n            updateSkills={this.updateSkills}\n            setContactOpen={this.setContactOpen}\n            setWorkOpen={this.setWorkOpen}\n            setEducationOpen={this.setEducationOpen}\n            setSkillsOpen={this.setSkillsOpen}\n            setCustomizeOpen={this.setCustomizeOpen}\n          />\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DeleteConfirmation\n              open={this.state.deleteConfirmationOpen}\n              deleteMode={this.state.deleteMode}\n              handleClose={this.closeDeleteConfirmation}\n              deleteWork={this.confirmDeleteWorkInfo}\n              deleteEducation={this.confirmDeleteEducationInfo}\n            />\n\n            <EditContactForm\n              open={this.state.contactOpen}\n              handleClose={this.handleContactClose}\n              contactInformation={this.state.resume._contactInformation}\n              updateContactInfo={this.updateContactInfo}\n            />\n            <EditWorkExpForm\n              open={this.state.workOpen}\n              handleClose={this.handleWorkClose}\n              workHistory={this.state.resume._workHistory}\n              educationHistory={this.state.resume._educationHistory}\n              updateWorkInfo={this.updateWorkInfo}\n              updateEducationInfo={this.updateEducationInfo}\n              workMode={this.state.workMode}\n              idToPopulate={this.state.idToPopulate}\n              mode={this.state.addEditMode}\n            />\n            <EditSkillsForm\n              open={this.state.skillsOpen}\n              handleClose={this.handleSkillsClose}\n              skills={this.state.resume._skills}\n              updateSkills={this.updateSkills}\n              deleteSkill={this.deleteSkill}\n            />\n            <CustomizeForm\n              open={this.state.customizeOpen}\n              handleClose={this.handleCustomizeClose}\n              customColors={this.customColors}\n              updateColor={this.updateColor}\n            />\n          </LocalizationProvider>\n        </ThemeProvider>\n        <Box\n          sx={{\n            display: \"flex\",\n            bgcolor: \"background.paper\",\n          }}\n        >\n          <ThemeProvider theme={resumeTheme}>\n            <ResumeOutput\n              resume={this.state.resume}\n              editWorkInfo={this.editWorkInfo}\n              deleteWorkInfo={this.deleteWorkInfo}\n              editEducationInfo={this.editEducationInfo}\n              deleteEducationInfo={this.deleteEducationInfo}\n            />\n          </ThemeProvider>\n        </Box>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}